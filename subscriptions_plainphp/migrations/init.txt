SQL
alter table users create index if not exists on (validts); 
alter table users add column id unsigned int not null promary key;

/* Вообще я не сторонник бизнес логики в триггерах. Не стоит ее размазывать между БД и приложением. 
 * Но т.к. по заданию мы пишем только рассылки, а данные пользователей управляются за пределами нашего сервиса, 
 * в частности, процесс подтверждения емейла, и нет куска кода, который можно было бы модифицировать и вставить этот туда,
 * то я решил триггером просто обозначить, что вот есть такой путь оптимизации вызова check_email().
 *
 * Вообще как альтернативы:
 * - сделать в сервсие рассылок этап регистрации и обновления потенциальных получателей (и тогда поместить этот код туда)
 * - реализовать общение между разными сервисами через какую-нибудь шину. Тогда сервис, в котором происходит конфирм емейла (возможно, это авторизация) зашвырнет в шину евент о том, что произошло подтверждение мыла, а наш сервис рассылок будет подписан на этот евент и отметит у себя факт подтверждения мыла.
 */
DELIMITER %
CREATE TRIGGER trigger_name BEFORE INSERT 
ON users 
BEGIN 
 new.checked = new.checker or new.confirmed; -- типа если юзер подтвердил почту, то она живая, пометим сразу, чтоб потом не дергать дорогую функцию check_email
END
DELIMITER ;
-- и такой же before update

create table notifications_queue (
	user_id unsigned int not null,
	email varchar(),
	notification_id int unsigned,
	status enum('new', 'validated', 'sent') default 'new',
	added_at datetime default now(),
)
alter table notifications_queue create index if not exists on (status); 
alter table notifications_queue create unique index if not exists on (user_id, notification_id); 
